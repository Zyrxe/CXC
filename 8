// scripts/deploy_token.js
const { ethers } = require("hardhat");

async function main() {
  console.log("Starting TAKULAI token deployment...");

  // Get the deployer account
  const [deployer] = await ethers.getSigners();
  console.log("Deploying contracts with the account:", deployer.address);
  console.log("Account balance:", (await deployer.getBalance()).toString());

  // Deploy the TAKULAI token
  const TAKULAI = await ethers.getContractFactory("TAKULAI");
  
  // Define wallet addresses (these should be replaced with actual addresses)
  const developerWallet = "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4";
  const presaleWallet = "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2";
  const liquidityWallet = "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db";
  const marketingWallet = "0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB";
  const burnReserveWallet = "0x617F2E2fD72FD9D5503197092aC168c91465E7f2";

  const takulai = await TAKULAI.deploy(
    developerWallet,
    presaleWallet,
    liquidityWallet,
    marketingWallet,
    burnReserveWallet
  );

  await takulai.deployed();
  console.log("TAKULAI Token deployed to:", takulai.address);

  // Deploy utility contracts
  const TAKULAI_Timelock = await ethers.getContractFactory("TAKULAI_Timelock");
  const timelock = await TAKULAI_Timelock.deploy(takulai.address);
  await timelock.deployed();
  console.log("TAKULAI Timelock deployed to:", timelock.address);

  // Save contract addresses to a file
  const fs = require("fs");
  const contractAddresses = {
    TAKULAI: takulai.address,
    TAKULAI_Timelock: timelock.address,
    developerWallet,
    presaleWallet,
    liquidityWallet,
    marketingWallet,
    burnReserveWallet
  };

  fs.writeFileSync(
    "./config/contract-addresses.json",
    JSON.stringify(contractAddresses, null, 2)
  );

  console.log("Deployment completed successfully!");
  console.log("Contract addresses saved to ./config/contract-addresses.json");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
